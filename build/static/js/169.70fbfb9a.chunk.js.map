{"version":3,"sources":["wrappers/breadcrumb/Breadcrumb.js","pages/other/Otp.js"],"names":["Breadcrumb","className","separator","item","NavLink","finalItem","Verify_otp","state","otp","resenddd","setState","interval","sendOtp","customer_email","mobile","msg","input","errors","handleChange","handleSubmit","bind","this","seconds","evt","target","name","value","event","preventDefault","axiosConfig","post","then","res","console","log","alert","catch","error","response","content","headerTop","Container","defaultActiveKey","Content","Pane","eventKey","onSubmit","onChange","numInputs","type","OTPError","React","Component"],"mappings":"oHAAA,oCAoBeA,IAhBI,WACjB,OACE,yBAAKC,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kCACb,kBAAC,cAAW,CACVC,UAAW,mCACXC,KAAMC,IACNC,UAAW,c,iOCEFC,EAAU,kDAE7B,aAAe,IAAD,EAkBqC,OAlBrC,qBACZ,gBAFFC,MAAQ,CAAEC,IAAK,IAAK,EAsBpBC,SAAW,WACT,EAAKC,SAAS,CAAEF,IAAK,KACrB,EAAKG,WACL,EAAKC,WAtBL,EAAKL,MAAQ,CACXM,eAAgB,GAEhBC,OAAQ,GACRN,IAAK,SACLO,IAAK,GAILC,MAAO,GACPC,OAAQ,IAKV,EAAKC,aAAe,SAAAV,GAAG,OAAI,EAAKE,SAAS,CAAEF,SAC3C,EAAKW,aAAe,EAAKA,aAAaC,KAAK,gBAAM,EAgIlD,OA/HA,qCAOD,WACEC,KAAKX,SAAS,CAAEY,QAAS,OAS1B,0BACD,SAAaC,GAEXF,KAAKX,SAAS,eAAGa,EAAIC,OAAOC,KAAOF,EAAIC,OAAOE,UAC/C,0BAED,SAAaC,GACXA,EAAMC,iBASNC,IACGC,KAAK,kBAAmBT,KAAKd,OAE7BwB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZG,MAAM,aAEPC,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,EAAMC,eAEvB,oBAED,WACE,OACE,kBAAC,WAAQ,KACP,kBAAC,IAAQ,KACP,qDACA,0BACEb,KAAK,cACLc,QAAQ,gEAQZ,kBAAC,IAAS,CAACC,UAAU,WAEnB,kBAAC,IAAU,MACX,yBAAKvC,UAAU,qCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,0BACb,kBAAC,IAAIwC,UAAS,CAACC,iBAAiB,SAC9B,kBAAC,IAAIC,QAAO,KACV,kBAAC,IAAIC,KAAI,CAACC,SAAS,SACjB,yBAAK5C,UAAU,wBACb,yBAAKA,UAAU,uBACb,0BAAM6C,SAAUzB,KAAKF,cACnB,6BACE,kBAAC,IAAQ,CACPO,MAAOL,KAAKd,MAAMC,IAClBuC,SAAU1B,KAAKH,aACf8B,UAAW,EACXC,KAAK,SACLxB,KAAK,MACLvB,UAAW,iCAEZmB,KAAKd,MAAM2C,SACR7B,KAAKd,MAAM2C,SACX,MAiBN,yBAAKjD,UAAU,cAQb,4BAAQgD,KAAK,QAAM,QACnB,4BAAQA,KAAK,UAAQ,6BAgBpD,EApJ4B,CAASE,IAAMC","file":"static/js/169.70fbfb9a.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\n\nconst Breadcrumb = () => {\n  return (\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\n      <div className=\"container\">\n        <div className=\"breadcrumb-content text-center\">\n          <Breadcrumbs\n            separator={<span>/</span>}\n            item={NavLink}\n            finalItem={\"span\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumb;\n","import React, { Fragment } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport OtpInput from \"react-otp-input\";\nimport axiosConfig from \"../../axiosConfig\";\n// import { Link } from \"react-router-dom\";\n// import { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\nimport Tab from \"react-bootstrap/Tab\";\n// import Nav from \"react-bootstrap/Nav\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\n\n// const Phone = ({ location }) => {\n//   const { pathname } = location;\n// function Otp(props) {\nexport default class Verify_otp extends React.Component {\n  state = { otp: \"\" };\n  constructor() {\n    super();\n    this.state = {\n      customer_email: \"\",\n      // visible : false,\n      mobile: \"\",\n      otp: \"123456\",\n      msg: \"\",\n\n      //   \"status\": true,\n\n      input: {},\n      errors: {},\n    };\n    //     this.handleChange = otp => this.setState({ otp });\n    //     this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = otp => this.setState({ otp });\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  resenddd = () => {\n    this.setState({ otp: \"\" });\n    this.interval();\n    this.sendOtp();\n  };\n  interval() {\n    this.setState({ seconds: 26 });\n\n    // let myInterval = setInterval(() => {\n    //     if (this.state.seconds == 0) {\n    //         clearInterval(myInterval);\n    //     } else {\n    //         this.setState({ seconds: this.state.seconds - 1 });\n    //     }\n    // }, 1000)\n  }\n  handleChange(evt) {\n    // const value=evt.target.value;\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    // this.otpIntegration()\n\n    // handleverifyotp=()=>{\n    //   const sendData = {\n    //     customer_email:localStorage.getItem('customer_email'),\n    //     status: this.state.status,\n    //   };\n\n    axiosConfig\n      .post(\"/user/verifyotp\", this.state)\n\n      .then(res => {\n        console.log(res);\n        alert(\"anjali\");\n      })\n      .catch(error => {\n        console.log(error.response);\n      });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MetaTags>\n          <title>Astrogyata | Login</title>\n          <meta\n            name=\"description\"\n            content=\"Compare page of flone react minimalist eCommerce template.\"\n          />\n        </MetaTags>\n        {/* <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem> */}\n        {/* <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}> */}\n        {/* <BreadcrumbsItem>\n        Login Register\n      </BreadcrumbsItem> */}\n        <LayoutOne headerTop=\"visible\">\n          {/* breadcrumb */}\n          <Breadcrumb />\n          <div className=\"login-register-area pt-100 pb-100\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-7 col-md-12 ml-auto mr-auto\">\n                  <div className=\"login-register-wrapper\">\n                    <Tab.Container defaultActiveKey=\"login\">\n                      <Tab.Content>\n                        <Tab.Pane eventKey=\"login\">\n                          <div className=\"login-form-container\">\n                            <div className=\"login-register-form\">\n                              <form onSubmit={this.handleSubmit}>\n                                <div>\n                                  <OtpInput\n                                    value={this.state.otp}\n                                    onChange={this.handleChange}\n                                    numInputs={4}\n                                    type=\"number\"\n                                    name=\"otp\"\n                                    separator={<span></span>}\n                                  />\n                                  {this.state.OTPError\n                                    ? this.state.OTPError\n                                    : null}\n                                </div>\n\n                                {/* <input\n                               onChange={this.changeHandler}\n                                type=\"number\"\n                                name=\"mobile \"\n                                placeholder=\"Enter your OTP\"\n                              /> */}\n\n                                {/* <input\n                               onChange={this.changeHandler}\n                                type=\"number\"\n                                name=\"otp \"\n                                placeholder=\"Enter your OTP\"\n                              /> */}\n\n                                <div className=\"button-box\">\n                                  {/* <div className=\"login-toggle-btn\">\n                                  <input type=\"checkbox\" />\n                                  <label className=\"ml-10\">Remember me</label>\n                                  <Link to={process.env.PUBLIC_URL + \"/\"}>\n                                    Forgot Password?\n                                  </Link>\n                                </div> */}\n                                  <button type=\"back\">Back</button>\n                                  <button type=\"submit\">SendOTP</button>\n                                </div>\n                              </form>\n                            </div>\n                          </div>\n                        </Tab.Pane>\n                      </Tab.Content>\n                    </Tab.Container>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </LayoutOne>\n      </Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}
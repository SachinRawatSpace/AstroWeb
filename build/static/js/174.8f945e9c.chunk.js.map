{"version":3,"sources":["components/astrology/LiveAstro.js"],"names":["i","randomID","len","result","chars","maxPos","length","charAt","Math","floor","random","getUrlParams","url","window","location","href","urlStr","split","URLSearchParams","App","useLocation","console","log","state","videoliveStream","roomId","roomID","role_str","get","role","ZegoUIKitPrebuilt","Audience","sharedLinks","push","name","protocol","host","pathname","kitToken","generateKitTokenForTest","myMeeting","element","create","joinRoom","container","scenario","mode","LiveStreaming","config","className","ref","style","width","height"],"mappings":"kQACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEA,SAASC,EAASC,GAChB,IAAIC,EAAS,GACb,GAAIA,EAAQ,OAAOA,EACnB,IAEEH,EAFEI,EAAQ,iEACVC,EAASD,EAAME,OAGjB,IADAJ,EAAMA,GAAO,EACRF,EAAI,EAAGA,EAAIE,EAAKF,IACnBG,GAAUC,EAAMG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAEpD,OAAOF,EAEF,SAASQ,IAA0C,IAA7BC,EAAG,uDAAGC,OAAOC,SAASC,KAC7CC,EAASJ,EAAIK,MAAM,KAAK,GAC5B,OAAO,IAAIC,gBAAgBF,GAGd,SAASG,IAAO,IAAD,IACxBL,EAAWM,cACfC,QAAQC,IAAkB,QAAf,EAACR,EAASS,aAAK,aAAd,EAAgBC,iBAC5B,IAAIC,EAAuB,QAAjB,EAAGX,EAASS,aAAK,aAAd,EAAgBC,gBAC7B,GAAIC,EAAQ,CACV,IAAIC,EAASD,EAGTE,EAAWhB,EAAaE,OAAOC,SAASC,MAAMa,IAAI,SAAW,OAC3DC,EACS,aAAbF,EACIG,oBAAkBC,SACL,aAAbJ,EAEFK,EAAc,GACdH,IAASC,oBAAkBC,UAAyB,aAAbJ,GACzCK,EAAYC,KAAK,CACfC,KAAM,kBACNtB,IACEC,OAAOC,SAASqB,SAChB,KACAtB,OAAOC,SAASsB,KAChBvB,OAAOC,SAASuB,SAChB,WACAX,EACA,iBAGNM,EAAYC,KAAK,CACfC,KAAM,mBACNtB,IACEC,OAAOC,SAASqB,SAChB,KACAtB,OAAOC,SAASsB,KAChBvB,OAAOC,SAASuB,SAChB,WACAX,EACA,mBAGJ,IAEMY,EAAWR,oBAAkBS,wBAFrB,UACO,mCAInBb,EACAzB,EAAS,GACTA,EAAS,IAGPuC,EAAS,uCAAG,WAAMC,GAAO,iEAEhBX,oBAAkBY,OAAOJ,GAEjCK,SAAS,CACVC,UAAWH,EACXI,SAAU,CACRC,KAAMhB,oBAAkBiB,cACxBC,OAAQ,CACNnB,SAGJG,gBACC,2CACJ,gBAdY,sCAgBb,OACE,uBACEiB,UAAU,kBACVC,IAAKV,EACLW,MAAO,CAAEC,MAAO,QAASC,OAAQ","file":"static/js/174.8f945e9c.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nfunction randomID(len) {\n  let result = \"\";\n  if (result) return result;\n  var chars = \"12345qwertyuiopasdfgh67890jklmnbvcxzMNBVCZXASDQWERTYHGFUIOLKJP\",\n    maxPos = chars.length,\n    i;\n  len = len || 5;\n  for (i = 0; i < len; i++) {\n    result += chars.charAt(Math.floor(Math.random() * maxPos));\n  }\n  return result;\n}\nexport function getUrlParams(url = window.location.href) {\n  let urlStr = url.split(\"?\")[1];\n  return new URLSearchParams(urlStr);\n}\n\nexport default function App() {\n  let location = useLocation();\n  console.log(location.state?.videoliveStream);\n  let roomId = location.state?.videoliveStream;\n  if (roomId) {\n    let roomID = roomId;\n    //   const roomID = roomId;\n    // getUrlParams().get(\"roomID\") || randomID(5);\n    let role_str = getUrlParams(window.location.href).get(\"role\") || \"Host\";\n    const role =\n      role_str === \"Audience\"\n        ? ZegoUIKitPrebuilt.Audience\n        : role_str === \"Audience\";\n\n    let sharedLinks = [];\n    if (role === ZegoUIKitPrebuilt.Audience || role_str === \"Audience\") {\n      sharedLinks.push({\n        name: \"Join as co-host\",\n        url:\n          window.location.protocol +\n          \"//\" +\n          window.location.host +\n          window.location.pathname +\n          \"?roomID=\" +\n          roomID +\n          \"&role=Cohost\",\n      });\n    }\n    sharedLinks.push({\n      name: \"Join as audience\",\n      url:\n        window.location.protocol +\n        \"//\" +\n        window.location.host +\n        window.location.pathname +\n        \"?roomID=\" +\n        roomID +\n        \"&role=Audience\",\n    });\n    // generate Kit Token\n    const appID = 913321685;\n    const serverSecret = \"ec2b5151f49c5376a2e91a5a81a69bc0\";\n    const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\n      appID,\n      serverSecret,\n      roomID,\n      randomID(5),\n      randomID(5)\n    );\n    // start the call\n    let myMeeting = async element => {\n      // Create instance object from Kit Token.\n      const zp = ZegoUIKitPrebuilt.create(kitToken);\n      // start the call\n      zp.joinRoom({\n        container: element,\n        scenario: {\n          mode: ZegoUIKitPrebuilt.LiveStreaming,\n          config: {\n            role,\n          },\n        },\n        sharedLinks,\n      });\n    };\n\n    return (\n      <div\n        className=\"myCallContainer\"\n        ref={myMeeting}\n        style={{ width: \"100vw\", height: \"100vh\" }}\n      ></div>\n    );\n  }\n}\n"],"sourceRoot":""}
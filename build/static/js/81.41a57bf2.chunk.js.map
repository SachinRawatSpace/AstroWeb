{"version":3,"sources":["components/astrology/AllMinRechargeCall.js","assets/img/astrologin-bg.jpg","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js"],"names":["i","AllMinRechargeCall","props","componentDidMount","axiosConfig","get","then","response","console","log","data","status","setState","allminrechargeList","catch","error","submitHandler","id","astroid","userId","recharge_planid","userID","JSON","parse","localStorage","getItem","astroId","obj","userid","post","history","push","swal","state","modal","recharge_planId","toggle","bind","this","headerTop","className","style","float","width","backgroundColor","position","backgroundAttachment","backgroundSize","color","padding","backgroundImage","astrologinbg","backgroundPosition","backgroundRepeat","textAlign","md","minute","length","map","allmin","index","xl","lg","sm","xs","key","onClick","_id","size","maxWidth","isOpen","type","placeholder","React","Component","module","exports","componentWillMount","constructor","getDerivedStateFromProps","undefined","componentWillReceiveProps","nextProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning"],"mappings":"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","file":"static/js/81.41a57bf2.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport swal from \"sweetalert\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport \"../../assets/scss/astroteam.scss\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport axiosConfig from \"../../axiosConfig\";\nimport astrologinbg from \"../../assets/img/astrologin-bg.jpg\";\nimport { Link } from \"react-router-dom\";\nclass AllMinRechargeCall extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      allminrechargeList: [],\n      data: {},\n      userid: \"\",\n      astroid: \"\",\n      recharge_planId: \"\",\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n  toggle() {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  }\n  componentDidMount = () => {\n    axiosConfig\n      .get(\"/user/all_min_recharge\")\n      .then(response => {\n        console.log(\"Minimum Recharge\", response.data.data);\n        if (response.data.status === true) {\n          this.setState({ allminrechargeList: response.data.data });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        console.log(error.response);\n      });\n  };\n  submitHandler = async (id, astroid, userId, recharge_planid) => {\n    // console.log(\"plannnnn\", id);\n    let userID = JSON.parse(localStorage.getItem(\"user_id\"));\n    let astroId = localStorage.getItem(\"astroId\");\n    // e.preventDefault();\n    // let { id } = this.props.match.params;\n\n    let obj = {\n      astroid: astroId,\n      userid: userID,\n      //   recharge_planid: id,\n    };\n    await axiosConfig\n      .post(\"/user/addCallWallet\", obj)\n      .then(response => {\n        // console.log(\"AddCallWallet>>>>\", response.data);\n        if (response.data.status === true) {\n          this.props.history.push(\"/CallListData\");\n          // this.setState({});\n        }\n      })\n      .catch(error => {\n        swal(\n          \"Error!\",\n          \"You Dont have Sufficient Balance Please Recharge Now!\",\n          \"error\"\n        );\n        console.log(error);\n      });\n  };\n  render() {\n    const { allminrechargeList } = this.state;\n    return (\n      <LayoutOne headerTop=\"visible\">\n        <section className=\"pt-0 pb-0\">\n          <div\n            className=\"\"\n            style={{\n              // backgroundColor: \"#FFD59E\",\n              // width: \"100%\",\n              // padding: \"70px 0px\",\n              // backgroundSize: \"cover\",\n              float: \"left\",\n              width: \"100%\",\n              backgroundColor: \"#272727\",\n              position: \"relative\",\n              backgroundAttachment: \"fixed\",\n              backgroundSize: \"cover\",\n              color: \"#ffffff\",\n              padding: \" 50px 0px 50px 0px\",\n              backgroundImage: `url(${astrologinbg})`,\n              backgroundPosition: \"center center\",\n              backgroundRepeat: \" no-repeat\",\n              textAlign: \"center\",\n            }}\n          >\n            <Container className=\"mb-3\">\n              <Row>\n                <Col md=\"12\">\n                  <div className=\"leftcont text-left\">\n                    <h1>Select Minute Now</h1>\n                    <h3>\n                      Available Minute : <span>{this.state.minute}</span>\n                    </h3>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </section>\n        <section className=\"mt-3\">\n          <Container>\n            <Row>\n              {allminrechargeList.length\n                ? allminrechargeList.map((allmin, index) => {\n                    return (\n                      <Col xl=\"3\" lg=\"3\" md=\"3\" sm=\"6\" xs=\"6\" key={index}>\n                        <Link\n                          onClick={() => this.submitHandler(allmin._id)}\n                          // onClick={() => {\n                          //   localStorage.setItem(\"minute\", allmin.minute);\n                          //   this.props.history.push('/chatApp')\n                          //   this.props.history.push(\"/UserRequestForm\");\n                          // }}\n                        >\n                          <div className=\"promoBox success-box info-ribbon\">\n                            <h4>Minute {allmin.minute}</h4>\n                          </div>\n                        </Link>\n                      </Col>\n                    );\n                  })\n                : \"No Intake Form Data Available\"}\n            </Row>\n          </Container>\n        </section>\n        {/* modal for recharge*/}\n        <Modal\n          size=\"md\"\n          style={{ maxWidth: \"600px\", width: \"100%\" }}\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader className=\"wr-3\" toggle={this.toggle}>\n            <h2 className=\"wr-4\">Apply Voucher Code</h2>\n          </ModalHeader>\n          <ModalBody>\n            <div className=\"Wr-1 wr-t\">\n              <form>\n                <Col md=\"12\">\n                  <input type=\"text\" placeholder=\"Enter Your Voucher  Code\" />\n                </Col>\n                <Button className=\"btn btn-success\">Submit</Button>\n              </form>\n            </div>\n          </ModalBody>\n        </Modal>\n      </LayoutOne>\n    );\n  }\n}\nexport default AllMinRechargeCall;\n","module.exports = __webpack_public_path__ + \"static/media/astrologin-bg.f858568c.jpg\";","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n  if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n    throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') + '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://fb.me/react-async-component-lifecycle-hooks');\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');\n    }\n    prototype.componentWillUpdate = componentWillUpdate;\n    var componentDidUpdate = prototype.componentDidUpdate;\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n  return Component;\n}\nexport { polyfill };"],"sourceRoot":""}
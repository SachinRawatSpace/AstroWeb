{"version":3,"sources":["components/astrology/sliderdemo.js","components/astrology/sliderlist.js"],"names":["SliderDemo","data","sliderClass","sliderdemoClass","useState","setBestAstrology","useEffect","className","to","_id","src","img","alt","fullname","exp_in_years","callCharge","status","onClick","console","log","mobileNo","localStorage","getItem","obj","userid","JSON","parse","astroid","From","mobile","To","axiosConfig","post","then","response","swal","catch","error","handleCalltogyta","class","SliderList","spaceTopClass","spaceBottomClass","spaceLeftClass","spaceRightClass","bgColorClass","settings","backgroundImage","slidesPerView","loop","autoplay","delay","disableOnInteraction","breakpoints","768","direction","spaceBetween","640","320","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","testimonialData","setTestimonialData","get","textbottom","map","single","key"],"mappings":"4LAsFeA,UAhFI,SAAH,GAAgD,IAA1CC,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAaC,EAAe,EAAfA,gBACvC,EAA0CC,mBAASH,GAAK,mBAAlCI,GAAF,KAAkB,MA8BtC,OAJAC,qBAAU,WACRD,EAAiBJ,KAChB,CAACA,IAGF,yBACEM,UAAS,UACPJ,GAAoC,eAAc,wBACpCD,GAA4B,GAAE,YAE9C,yBAAKK,UAAU,cACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,aACb,kBAAC,IAAI,CAACC,GAAI,qBAAuBP,EAAKQ,KACpC,yBAAKF,UAAU,QACb,yBAAKA,UAAU,yBACb,2BACE,yBAAKG,IAAS,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMU,IAAKC,IAAI,MAE3B,wBAAIL,UAAU,cAAkB,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMY,UAClC,wBAAIN,UAAU,QACZ,2CACc,8BAAW,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMa,aAAY,UAEvC,yCAEE,8BAAW,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMc,WAAU,WAG3B,kBAAC,IAAI,CAACR,UAAU,+BACT,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMe,QAET,kBAAC,IAAI,CACHC,QAAS,kBAzDF,SAAAhB,GACvBiB,QAAQC,IAAIlB,GAEZ,IAAImB,EAAWC,aAAaC,QAAQ,kBAGhCC,EAAM,CACRC,OAHWC,KAAKC,MAAML,aAAaC,QAAQ,YAI3CK,QAAS1B,EAAKQ,IACdmB,KAAM3B,EAAK4B,OACXC,GAAIV,GAENW,IACGC,KAAK,kBAAmBT,GAExBU,MAAK,SAAAC,GACJhB,QAAQC,IAAIe,GACZC,IAAK,iBAAkB,mBAGxBC,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,MAoCeC,CAAiBrC,IAChCM,UAAU,0BAEV,uBAAGgC,MAAM,gBAAkB,sB,yHCoDhCC,UAhHI,SAAH,GAQT,IAPLC,EAAa,EAAbA,cACAC,EAAgB,EAAhBA,iBACAC,EAAc,EAAdA,eACAC,EAAe,EAAfA,gBACAC,EAAY,EAAZA,aACA1C,EAAe,EAAfA,gBAIM2C,GAHS,EAAfC,gBAGiB,CACfC,cAAe,EACfC,MAAM,EACNC,SAAU,CACRC,MAAO,IACPC,sBAAsB,GAExBC,YAAa,CACXC,IAAK,CACHN,cAAe,EACfO,UAAW,aACXC,aAAc,IAEhBC,IAAK,CACHT,cAAe,EACfO,UAAW,aACXC,aAAc,IAEhBE,IAAK,CACHV,cAAe,EACfO,UAAW,aACXC,aAAc,KAIlBG,WAAY,CACVC,OAAQ,sBACRC,OAAQ,uBAEVC,iBAAkB,kBAChB,4BAAQvD,UAAU,2CAChB,uBAAGA,UAAU,uBAGjBwD,iBAAkB,kBAChB,4BAAQxD,UAAU,2CAChB,uBAAGA,UAAU,0BAKnB,EAA8CH,mBAAS,IAAG,mBAAnD4D,EAAe,KAAEC,EAAkB,KAe1C,OAbA3D,qBAAU,WACRyB,IACGmC,IAAI,mBACJjC,MAAK,SAAAC,IACyB,IAAzBA,EAASjC,KAAKe,QAChBiD,EAAmB/B,EAASjC,KAAKA,SAGpCmC,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,QAEf,IAGD,yBACE9B,UAAS,WAAMkC,GAAgC,GAAE,aAC/CC,GAAsC,GAAE,YACtCC,GAAkC,GAAE,aACtCC,GAAoC,GAAE,YACpCC,GAA8B,KAElC,yBAAKtC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,WACb,gDACA,yBAAKG,IAAKyD,IAAYvD,IAAI,MAE5B,yBAAKL,UAAU,gCACb,kBAAC,IAAWuC,EACTkB,GACCA,EAAgBI,KAAI,SAACC,EAAQC,GAC3B,OACE,kBAAC,UAAU,CACTrE,KAAMoE,EACNC,IAAKA,EACLpE,YAAY,mBACZC,gBAAiBA","file":"static/js/164.d90e9791.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport axiosConfig from \"../../axiosConfig\";\nimport swal from \"sweetalert\";\nconst SliderDemo = ({ data, sliderClass, sliderdemoClass }) => {\n  const [bestAstrology, setBestAstrology] = useState(data);\n\n  const handleCalltogyta = data => {\n    console.log(data);\n\n    let mobileNo = localStorage.getItem(\"user_mobile_no\");\n    let userId = JSON.parse(localStorage.getItem(\"user_id\"));\n\n    let obj = {\n      userid: userId,\n      astroid: data._id,\n      From: data.mobile, //astrologer no\n      To: mobileNo, //parseInt(this.state.number) user no\n    };\n    axiosConfig\n      .post(`/user/make_call`, obj)\n\n      .then(response => {\n        console.log(response);\n        swal(\"Call Connected\", \"SuccessFully\");\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    setBestAstrology(data);\n  }, [data]);\n\n  return (\n    <div\n      className={`${\n        sliderdemoClass ? sliderdemoClass : \" slider-demo\"\n      } text-center ${sliderClass ? sliderClass : \"\"} st-hit`}\n    >\n      <div className=\"image-flip\">\n        <div className=\"mainflip flip-0\">\n          <div className=\"frontside\">\n            <Link to={\"/astrologerdetail/\" + data._id}>\n              <div className=\"card\">\n                <div className=\"card-body text-center\">\n                  <p>\n                    <img src={data?.img} alt=\"\" />\n                  </p>\n                  <h4 className=\"card-title\">{data?.fullname}</h4>\n                  <ul className=\"mb-3\">\n                    <li>\n                      Experience: <span>{data?.exp_in_years} year</span>\n                    </li>\n                    <li>\n                      Call Rate:\n                      <span>{data?.callCharge}/Mins</span>\n                    </li>\n                  </ul>\n                  <Link className=\"btn btn-primary btn-sm st-d\">\n                    {data?.status}\n                  </Link>\n                  <Link\n                    onClick={() => handleCalltogyta(data)}\n                    className=\"btn btn-primary btn-sm\"\n                  >\n                    <i class=\"fa fa-phone\"></i> Call Now\n                  </Link>\n                </div>\n              </div>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSliderDemo.propTypes = {\n  data: PropTypes.object,\n  sliderClass: PropTypes.string,\n};\n\nexport default SliderDemo;\n","import PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport Swiper from \"react-id-swiper\";\n//import testimonialData from \"../../data/testimonial/testimonial-one.json\";\n// import TestimonialOneSingle from \"../../components/testimonial/TestimonialOneSingle.js\";\nimport textbottom from \"../../assets/img/textbottom.png\";\nimport SliderDemo from \"./sliderdemo\";\nimport axiosConfig from \"../../axiosConfig\";\n\nconst SliderList = ({\n  spaceTopClass,\n  spaceBottomClass,\n  spaceLeftClass,\n  spaceRightClass,\n  bgColorClass,\n  sliderdemoClass,\n  backgroundImage,\n}) => {\n  // swiper slider settings\n  const settings = {\n    slidesPerView: 4,\n    loop: true,\n    autoplay: {\n      delay: 1000,\n      disableOnInteraction: false,\n    },\n    breakpoints: {\n      768: {\n        slidesPerView: 4,\n        direction: \"horizontal\",\n        spaceBetween: 15,\n      },\n      640: {\n        slidesPerView: 2,\n        direction: \"horizontal\",\n        spaceBetween: 15,\n      },\n      320: {\n        slidesPerView: 2,\n        direction: \"horizontal\",\n        spaceBetween: 15,\n      },\n    },\n\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    renderPrevButton: () => (\n      <button className=\"swiper-button-prev ht-swiper-button-nav\">\n        <i className=\"pe-7s-angle-left\" />\n      </button>\n    ),\n    renderNextButton: () => (\n      <button className=\"swiper-button-next ht-swiper-button-nav\">\n        <i className=\"pe-7s-angle-right\" />\n      </button>\n    ),\n  };\n\n  const [testimonialData, setTestimonialData] = useState([]);\n\n  useEffect(() => {\n    axiosConfig\n      .get(`/admin/allAstro`)\n      .then(response => {\n        if (response.data.status === true) {\n          setTestimonialData(response.data.data);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div\n      className={` ${spaceTopClass ? spaceTopClass : \"\"}  ${\n        spaceBottomClass ? spaceBottomClass : \"\"\n      } ${spaceLeftClass ? spaceLeftClass : \"\"}  ${\n        spaceRightClass ? spaceRightClass : \"\"\n      } ${bgColorClass ? bgColorClass : \"\"}`}\n    >\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12  ml-auto mr-auto\">\n            <div className=\"heading\">\n              <h2>Best Astrologers</h2>\n              <img src={textbottom} alt=\"\" />\n            </div>\n            <div className=\" nav-style-1 nav-testi-style\">\n              <Swiper {...settings}>\n                {testimonialData &&\n                  testimonialData.map((single, key) => {\n                    return (\n                      <SliderDemo\n                        data={single}\n                        key={key}\n                        sliderClass=\"swiper-slide rtt\"\n                        sliderdemoClass={sliderdemoClass}\n                      />\n                    );\n                  })}\n              </Swiper>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSliderList.propTypes = {\n  bgColorClass: PropTypes.string,\n  spaceBottomClass: PropTypes.string,\n  spaceLeftClass: PropTypes.string,\n  spaceRightClass: PropTypes.string,\n  spaceTopClass: PropTypes.string,\n  testimonialClass: PropTypes.string,\n};\n\nexport default SliderList;\n"],"sourceRoot":""}
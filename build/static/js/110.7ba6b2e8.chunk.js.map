{"version":3,"sources":["components/astrology/UserChatHistory.js","assets/img/astrologin-bg.jpg"],"names":["UserChatHistory","props","componentDidMount","userId","JSON","parse","localStorage","getItem","axiosConfig","get","then","response","AllChatData","data","filter","ele","type","console","log","setState","catch","error","amount","state","TablerowData","columns","headerName","field","sortable","valueGetter","params","createdAt","split","this","headerTop","className","style","float","width","backgroundColor","position","backgroundAttachment","backgroundSize","color","padding","backgroundImage","astrologinbg","backgroundPosition","backgroundRepeat","textAlign","md","height","columnDefs","rowData","pagination","paginationPageSize","React","Component","module","exports"],"mappings":"oQAUMA,G,cAAe,kDACnB,WAAYC,GAAQ,IAAD,EAuEf,OAvEe,qBACjB,cAAMA,IAwERC,kBAAoB,WAClB,IAAIC,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,YAC7CC,IACGC,IAAI,yBAAD,OAA0BN,IAC7BO,MAAK,SAAAC,GAEJ,IAAMC,EAAcD,EAASE,KAAKA,KAAKC,QACrC,SAAAC,GAAG,MAAiB,SAAbA,EAAIC,QAEbC,QAAQC,IAAIN,GACZ,EAAKO,SAAS,CACZnB,gBAAiBY,OAGpBQ,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,MAEhBb,IACGC,IAAI,yBAAD,OAA0BN,IAC7BO,MAAK,SAAAC,GACJ,EAAKQ,SAAS,CACZG,OAAQX,EAASE,KAAKA,KAAKS,YAG9BF,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,OAhGhB,EAAKE,MAAQ,CACXvB,gBAAiB,GACjBa,KAAM,IAGR,EAAKU,MAAQ,CACXC,aAAc,GACdC,QAAS,CAOP,CACEC,WAAY,kBACZC,MAAO,mBACPC,UAAU,EACVd,QAAQ,GAEV,CACEY,WAAY,oBACZC,MAAO,OACPC,UAAU,EACVd,OAAQ,wBAEV,CACEY,WAAY,OACZC,MAAO,gBACPC,UAAU,EACVd,OAAQ,wBAEV,CACEY,WAAY,SACZC,MAAO,UACPC,UAAU,EACVd,OAAQ,wBAGV,CACEY,WAAY,YACZC,MAAO,gBACPC,UAAU,EACVd,OAAQ,wBAGV,CACEY,WAAY,WACZC,MAAO,WACPC,UAAU,EACVd,OAAQ,wBAEV,CACEY,WAAY,OACZG,YAAa,SAAUC,GACrB,OAAOA,EAAOjB,KAAKkB,UAAUC,MAAM,KAAK,IAE1CJ,UAAU,EACVd,OAAQ,wBAEV,CACEY,WAAY,OACZG,YAAa,SAAUC,GACrB,OAAOA,EAAOjB,KAAKkB,UAAUC,MAAM,KAAK,GAAGA,MAAM,KAAK,IAExDJ,UAAU,EACVd,OAAQ,0BAGZ,EAsFH,OArFA,mCA8BD,WAAU,IAAD,EACCd,EAAoBiC,KAAKV,MAAzBvB,gBACR,OACE,kBAAC,IAAS,CAACkC,UAAU,WACnB,6BAASC,UAAU,aACjB,yBACEA,UAAU,GACVC,MAAO,CACLC,MAAO,OACPC,MAAO,OACPC,gBAAiB,UACjBC,SAAU,WACVC,qBAAsB,QACtBC,eAAgB,QAChBC,MAAO,UACPC,QAAS,qBACTC,gBAAgB,OAAD,OAASC,IAAY,KACpCC,mBAAoB,gBACpBC,iBAAkB,aAClBC,UAAW,WAGb,kBAAC,IAAS,KACR,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACC,GAAG,MACN,yBAAKf,UAAU,sBACb,4DAEA,mDACsB,8BAAOF,KAAKV,MAAMD,eAQpD,iCACE,yBACEa,UAAU,kBACVC,MAAO,CACLe,OAAQ,OACRb,MAAO,SAGT,kBAAC,cAAW,CACVc,WAAsB,QAAZ,EAAEnB,KAAKV,aAAK,aAAV,EAAYE,QACxB4B,QAASrD,EACTsD,YAAY,EACZC,mBAAoB,YAM/B,EA9JkB,CAASC,IAAMC,YAgKrBzD,a,oBC1Kf0D,EAAOC,QAAU,IAA0B,2C","file":"static/js/110.7ba6b2e8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../assets/scss/astroteam.scss\";\nimport axiosConfig from \"../../axiosConfig\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport astrologinbg from \"../../assets/img/astrologin-bg.jpg\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\n\nclass UserChatHistory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      UserChatHistory: [],\n      data: {},\n    };\n\n    this.state = {\n      TablerowData: [],\n      columns: [\n        // {\n        //   headerName: \"ID\",\n        //   field: \"transaction_id\",\n        //   sortable: true,\n        //   filter: true,\n        // },\n        {\n          headerName: \"Astrologer Name\",\n          field: \"astroId.fullname\",\n          sortable: true,\n          filter: true,\n        },\n        {\n          headerName: \"Conversation Type\",\n          field: \"type\",\n          sortable: true,\n          filter: \"agNumberColumnFilter\",\n        },\n        {\n          headerName: \"Rate\",\n          field: \"totalCredited\",\n          sortable: true,\n          filter: \"agNumberColumnFilter\",\n        },\n        {\n          headerName: \"Amount\",\n          field: \"userAmt\",\n          sortable: true,\n          filter: \"agNumberColumnFilter\",\n        },\n\n        {\n          headerName: \"Deduction\",\n          field: \"totalDuration\",\n          sortable: true,\n          filter: \"agNumberColumnFilter\",\n        },\n\n        {\n          headerName: \"Duration\",\n          field: \"duration\",\n          sortable: true,\n          filter: \"agNumberColumnFilter\",\n        },\n        {\n          headerName: \"Date\",\n          valueGetter: function (params) {\n            return params.data.createdAt.split(\"T\")[0];\n          },\n          sortable: true,\n          filter: \"agNumberColumnFilter\",\n        },\n        {\n          headerName: \"Time\",\n          valueGetter: function (params) {\n            return params.data.createdAt.split(\"T\")[1].split(\".\")[0];\n          },\n          sortable: true,\n          filter: \"agNumberColumnFilter\",\n        },\n      ],\n    };\n  }\n  componentDidMount = () => {\n    let userId = JSON.parse(localStorage.getItem(\"user_id\"));\n    axiosConfig\n      .get(`/user/userChathistory/${userId}`)\n      .then(response => {\n        // console.log(response.data.data);\n        const AllChatData = response.data.data.filter(\n          ele => ele.type === \"Chat\"\n        );\n        console.log(AllChatData);\n        this.setState({\n          UserChatHistory: AllChatData,\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    axiosConfig\n      .get(`/user/userChathistory/${userId}`)\n      .then(response => {\n        this.setState({\n          amount: response.data.data.amount,\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    const { UserChatHistory } = this.state;\n    return (\n      <LayoutOne headerTop=\"visible\">\n        <section className=\"pt-0 pb-0\">\n          <div\n            className=\"\"\n            style={{\n              float: \"left\",\n              width: \"100%\",\n              backgroundColor: \"#272727\",\n              position: \"relative\",\n              backgroundAttachment: \"fixed\",\n              backgroundSize: \"cover\",\n              color: \"#ffffff\",\n              padding: \" 50px 0px 50px 0px\",\n              backgroundImage: `url(${astrologinbg})`,\n              backgroundPosition: \"center center\",\n              backgroundRepeat: \" no-repeat\",\n              textAlign: \"center\",\n            }}\n          >\n            <Container>\n              <Row>\n                <Col md=\"12\">\n                  <div className=\"leftcont text-left\">\n                    <h1>UserChatHistory Transactions</h1>\n\n                    <h3>\n                      Available balance : <span>{this.state.amount}</span>\n                    </h3>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </section>\n        <section>\n          <div\n            className=\"ag-theme-balham\"\n            style={{\n              height: \"80vh\",\n              width: \"100%\",\n            }}\n          >\n            <AgGridReact\n              columnDefs={this.state?.columns}\n              rowData={UserChatHistory}\n              pagination={true}\n              paginationPageSize={50}\n            />\n          </div>\n        </section>\n      </LayoutOne>\n    );\n  }\n}\nexport default UserChatHistory;\n\n// import React from \"react\";\n\n// import { Container, Row, Col, Table } from \"reactstrap\";\n// import astrologinbg from \"../../assets/img/astrologin-bg.jpg\";\n\n// import LayoutOne from \"../../layouts/LayoutOne\";\n// import \"../../assets/scss/astroteam.scss\";\n\n// import axiosConfig from \"../../axiosConfig\";\n\n// class UserCallHistory extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       userChatList: [],\n//     };\n//   }\n//   componentDidMount() {\n//     let userId = JSON.parse(localStorage.getItem(\"user_id\"));\n//     axiosConfig\n//       .get(`/user/userChathistory/${userId}`)\n//       .then(response => {\n//         const responseData = response?.data?.data;\n//         console.log(responseData);\n\n//         responseData.filter(ele => ele.type === \"Chat\");\n\n//         // if (responseData === true) {\n//         // console.log(allChat);\n//         this.setState({\n//           userChatList: responseData,\n//         });\n//         // }\n//       })\n//       .catch(error => {\n//         console.log(error);\n//       });\n//   }\n\n//   render() {\n//     const { userChatList } = this.state;\n\n//     return (\n//       <LayoutOne headerTop=\"visible\">\n//         <section className=\"pt-0 pb-0\">\n//           <div\n//             className=\"\"\n//             style={{\n//               float: \"left\",\n//               width: \"100%\",\n//               backgroundColor: \"#272727\",\n//               position: \"relative\",\n//               backgroundAttachment: \"fixed\",\n//               backgroundSize: \"cover\",\n//               color: \"#ffffff\",\n//               padding: \" 50px 0px 50px 0px\",\n//               backgroundImage: `url(${astrologinbg})`,\n//               backgroundPosition: \"center center\",\n//               backgroundRepeat: \" no-repeat\",\n//               textAlign: \"center\",\n//             }}\n//           >\n//             <Container>\n//               <Row>\n//                 <Col md=\"12\">\n//                   <div className=\"leftcont text-left\">\n//                     <h1>UserChatHistory Transactions</h1>\n//                   </div>\n//                 </Col>\n//               </Row>\n//             </Container>\n//           </div>\n//         </section>\n\n//         <section>\n//           <Container>\n//             <Row>\n//               <Col lg=\"12\">\n//                 <div className=\"\">\n//                   <Table striped className=\"\">\n//                     <thead>\n//                       <tr>\n//                         <th>#Conversation ID</th>\n//                         <th>Astrologer Name</th>\n\n//                         <th>Conversation Type</th>\n//                         <th>Rate</th>\n//                         <th>Duration</th>\n\n//                         <th>Deducation</th>\n//                         {/* <th>Date/Time</th> */}\n//                       </tr>\n//                     </thead>\n//                     {userChatList.length\n//                       ? userChatList.map(user => {\n//                           return (\n//                             <tbody key={user._id}>\n//                               <tr>\n//                                 <th>{user?.Sid}</th>\n//                                 <td>{user?.astroId?.fullname}</td>\n\n//                                 <td>{user.type}</td>\n\n//                                 <td>{user?.astroid?.callCharge}/Min.</td>\n\n//                                 <td>{user?.Duration} Min</td>\n//                                 <td>{user?.userdeductedAmt} Rs</td>\n//                                 {/* <td>{user?.DateCreated.split(\"T\")[0]}</td> */}\n//                               </tr>\n//                             </tbody>\n//                           );\n//                         })\n//                       : null}\n//                   </Table>\n//                 </div>\n//               </Col>\n//             </Row>\n//           </Container>\n//         </section>\n//       </LayoutOne>\n//     );\n//   }\n// }\n\n// export default UserCallHistory;\n","module.exports = __webpack_public_path__ + \"static/media/astrologin-bg.f858568c.jpg\";"],"sourceRoot":""}
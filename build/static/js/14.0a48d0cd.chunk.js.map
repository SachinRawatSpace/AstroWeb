{"version":3,"sources":["wrappers/breadcrumb/Breadcrumb.js","components/product/sub-components/ProductRating.js","components/product/ProductModal.js","components/product/ProductGridSingleTwo.js","wrappers/product/ProductGridTwo.js","wrappers/product/ShopProducts.js"],"names":["Breadcrumb","className","separator","item","NavLink","finalItem","ProductRating","ratingValue","rating","i","push","key","connect","state","cartitems","cartData","props","product","currency","discountedprice","finalproductprice","finaldiscountedprice","useState","gallerySwiper","getGallerySwiper","thumbnailSwiper","getThumbnailSwiper","data","color","selectedProductColor","setSelectedProductColor","size","stock","productStock","setProductStock","quantityCount","setQuantityCount","wishlistItem","wishlistitem","compareItem","compareitem","addToCart","addtocart","addToWishlist","addtowishlist","addToCompare","addtocompare","addToast","addtoast","useEffect","controller","control","gallerySwiperParams","getSwiper","spaceBetween","loopedSlides","loop","thumbnailSwiperParams","slidesPerView","touchRatio","freeMode","slideToClickedSlide","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","show","onHide","Header","closeButton","image","map","single","src","process","alt","name","currencySymbol","shortDescription","type","value","checked","onChange","singleSize","affiliateLink","href","rel","target","onClick","readOnly","disabled","undefined","title","ProductGridSingleTwo","cartItem","discountedPrice","sliderClassName","spaceBottomClass","colorClass","titlePriceClass","modalShow","setModalShow","useToasts","dress","setDress","fetch","response","json","console","log","getData","getDiscountPrice","price","discount","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","_id","to","product_img","style","width","height","variation","length","id","quantity","product_name","sell_price","ProductModal","cartitem","ownProps","products","getProducts","productData","category","limit","currencyData","cartItems","wishlistItems","wishlistData","compareItems","compareData","dispatch","selectedProductSize","ShopProducts","layout"],"mappings":"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","file":"static/js/14.0a48d0cd.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\n\nconst Breadcrumb = () => {\n  return (\n    <div className=\"breadcrumb-area pt-10 pb-10 bg-gray-5\">\n      <div className=\"container\">\n        <div className=\"breadcrumb-content text-center\">\n          <Breadcrumbs\n            separator={<span>/</span>}\n            item={NavLink}\n            finalItem={\"span\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Breadcrumb;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\n\nconst ProductRating = ({ ratingValue }) => {\n  let rating = [];\n\n  for (let i = 0; i < 5; i++) {\n    rating.push(<i className=\"fa fa-star-o\" key={i}></i>);\n  }\n  if (ratingValue && ratingValue > 0) {\n    for (let i = 0; i <= ratingValue - 1; i++) {\n      rating[i] = <i className=\"fa fa-star-o yellow\" key={i}></i>;\n    }\n  }\n  return <Fragment>{rating}</Fragment>;\n};\n\nProductRating.propTypes = {\n  ratingValue: PropTypes.number\n};\n\nexport default ProductRating;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Swiper from \"react-id-swiper\";\n// import { getProductCartQuantity } from \"../../helpers/product\";\nimport { Modal } from \"react-bootstrap\";\nimport Rating from \"./sub-components/ProductRating\";\nimport { connect } from \"react-redux\";\n\nfunction ProductModal(props) {\n  const { product } = props;\n  const { currency } = props;\n  const { discountedprice } = props;\n  const { finalproductprice } = props;\n  const { finaldiscountedprice } = props;\n\n  const [gallerySwiper, getGallerySwiper] = useState(null);\n  const [thumbnailSwiper, getThumbnailSwiper] = useState(null);\n  const [selectedProductColor, setSelectedProductColor] = useState(\n    product.data ? product.data[0].color : \"\"\n  );\n  // const [selectedProductSize, setSelectedProductSize] = useState(\n  //   product.data ? product.data[0].size[0].name : \"\"\n  // );\n  const [productStock, setProductStock] = useState(\n    product.data ? product.data[0].size[0].stock : product.stock\n  );\n  const [quantityCount, setQuantityCount] = useState(1);\n\n  const wishlistItem = props.wishlistitem;\n  const compareItem = props.compareitem;\n\n  const addToCart = props.addtocart;\n  const addToWishlist = props.addtowishlist;\n  const addToCompare = props.addtocompare;\n\n  const addToast = props.addtoast;\n  const cartItems = props.cartitems;\n\n  // const productCartQty = getProductCartQuantity(\n  //   cartItems,\n  //   product,\n  //   selectedProductColor,\n  //   selectedProductSize\n  // );\n\n  useEffect(() => {\n    if (\n      gallerySwiper !== null &&\n      gallerySwiper.controller &&\n      thumbnailSwiper !== null &&\n      thumbnailSwiper.controller\n    ) {\n      gallerySwiper.controller.control = thumbnailSwiper;\n      thumbnailSwiper.controller.control = gallerySwiper;\n    }\n  }, [gallerySwiper, thumbnailSwiper]);\n\n  const gallerySwiperParams = {\n    getSwiper: getGallerySwiper,\n    spaceBetween: 10,\n    loopedSlides: 4,\n    loop: true,\n  };\n\n  const thumbnailSwiperParams = {\n    getSwiper: getThumbnailSwiper,\n    spaceBetween: 10,\n    slidesPerView: 4,\n    loopedSlides: 4,\n    touchRatio: 0.2,\n    freeMode: true,\n    loop: true,\n    slideToClickedSlide: true,\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    renderPrevButton: () => (\n      <button className=\"swiper-button-prev ht-swiper-button-nav\">\n        <i className=\"pe-7s-angle-left\" />\n      </button>\n    ),\n    renderNextButton: () => (\n      <button className=\"swiper-button-next ht-swiper-button-nav\">\n        <i className=\"pe-7s-angle-right\" />\n      </button>\n    ),\n  };\n\n  return (\n    <Fragment>\n      <Modal\n        show={props.show}\n        onHide={props.onHide}\n        className=\"product-quickview-modal-wrapper\"\n      >\n        <Modal.Header closeButton></Modal.Header>\n\n        <div className=\"modal-body\">\n          <div className=\"row\">\n            <div className=\"col-md-5 col-sm-12 col-xs-12\">\n              <div className=\"product-large-image-wrapper\">\n                <Swiper {...gallerySwiperParams}>\n                  {product.image &&\n                    product.image.map((single, key) => {\n                      return (\n                        <div key={key}>\n                          <div className=\"single-image\">\n                            <img\n                              src={process.env.PUBLIC_URL + single}\n                              className=\"img-fluid\"\n                              alt=\"\"\n                            />\n                          </div>\n                        </div>\n                      );\n                    })}\n                </Swiper>\n              </div>\n              <div className=\"product-small-image-wrapper mt-15\">\n                <Swiper {...thumbnailSwiperParams}>\n                  {product.image &&\n                    product.image.map((single, key) => {\n                      return (\n                        <div key={key}>\n                          <div className=\"single-image\">\n                            <img\n                              src={process.env.PUBLIC_URL + single}\n                              className=\"img-fluid\"\n                              alt=\"\"\n                            />\n                          </div>\n                        </div>\n                      );\n                    })}\n                </Swiper>\n              </div>\n            </div>\n            <div className=\"col-md-7 col-sm-12 col-xs-12\">\n              <div className=\"product-details-content quickview-content\">\n                <h2>{product.name}</h2>\n                <div className=\"product-details-price\">\n                  {discountedprice !== null ? (\n                    <Fragment>\n                      <span>\n                        {currency.currencySymbol + finaldiscountedprice}\n                      </span>{\" \"}\n                      <span className=\"old\">\n                        {currency.currencySymbol + finalproductprice}\n                      </span>\n                    </Fragment>\n                  ) : (\n                    <span>{currency.currencySymbol + finalproductprice} </span>\n                  )}\n                </div>\n                {product.rating && product.rating > 0 ? (\n                  <div className=\"pro-details-rating-wrap\">\n                    <div className=\"pro-details-rating\">\n                      <Rating ratingValue={product.rating} />\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <div className=\"pro-details-list\">\n                  <p>{product.shortDescription}</p>\n                </div>\n\n                {product.data ? (\n                  <div className=\"pro-details-size-color\">\n                    <div className=\"pro-details-color-wrap\">\n                      <span>Color</span>\n                      <div className=\"pro-details-color-content\">\n                        {product.data.map((single, key) => {\n                          return (\n                            <label\n                              className={`pro-details-color-content--single ${single.color}`}\n                              key={key}\n                            >\n                              <input\n                                type=\"radio\"\n                                value={single.color}\n                                name=\"product-color\"\n                                checked={\n                                  single.color === selectedProductColor\n                                    ? \"checked\"\n                                    : \"\"\n                                }\n                                onChange={() => {\n                                  setSelectedProductColor(single.color);\n                                  // setSelectedProductSize(single.size[0].name);\n                                  setProductStock(single.size[0].stock);\n                                  setQuantityCount(1);\n                                }}\n                              />\n                              <span className=\"checkmark\"></span>\n                            </label>\n                          );\n                        })}\n                      </div>\n                    </div>\n                    <div className=\"pro-details-size\">\n                      <span>Size</span>\n                      <div className=\"pro-details-size-content\">\n                        {product.data &&\n                          product.data.map((single) => {\n                            return single.color === selectedProductColor\n                              ? single.size.map((singleSize, key) => {\n                                  return (\n                                    <label\n                                      className={`pro-details-size-content--single`}\n                                      key={key}\n                                    >\n                                      {/* <input\n                                        type=\"radio\"\n                                        value={singleSize.name}\n                                        checked={\n                                          singleSize.name ===\n                                          selectedProductSize\n                                            ? \"checked\"\n                                            : \"\"\n                                        }\n                                        onChange={() => {\n                                          setSelectedProductSize(\n                                            singleSize.name\n                                          );\n                                          setProductStock(singleSize.stock);\n                                          setQuantityCount(1);\n                                        }}\n                                      /> */}\n                                      <span className=\"size-name\">\n                                        {singleSize.name}\n                                      </span>\n                                    </label>\n                                  );\n                                })\n                              : \"\";\n                          })}\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                {product.affiliateLink ? (\n                  <div className=\"pro-details-quality\">\n                    <div className=\"pro-details-cart btn-hover\">\n                      <a\n                        href={product.affiliateLink}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                      >\n                        Buy Now\n                      </a>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"pro-details-quality\">\n                    <div className=\"cart-plus-minus\">\n                      <button\n                        onClick={() =>\n                          setQuantityCount(\n                            quantityCount > 1 ? quantityCount - 1 : 1\n                          )\n                        }\n                        className=\"dec qtybutton\"\n                      >\n                        -\n                      </button>\n                      <input\n                        className=\"cart-plus-minus-box\"\n                        type=\"text\"\n                        value={quantityCount}\n                        readOnly\n                      />\n                      <button\n                        // onClick={() =>\n                        //   setQuantityCount(\n                        //     quantityCount < productStock - productCartQty\n                        //       ? quantityCount + 1\n                        //       : quantityCount\n                        //   )\n                        // }\n                        className=\"inc qtybutton\"\n                      >\n                        +\n                      </button>\n                    </div>\n                    <div className=\"pro-details-cart btn-hover\">\n                      {productStock && productStock > 0 ? (\n                        <button\n                          onClick={() =>\n                            addToCart(\n                              product,\n                              addToast,\n                              quantityCount,\n                              selectedProductColor\n                              // selectedProductSize\n                            )\n                          }\n                          // disabled={productCartQty >= productStock}\n                        >\n                          {\" \"}\n                          Add To Cart{\" \"}\n                        </button>\n                      ) : (\n                        <button disabled>Out of Stock</button>\n                      )}\n                    </div>\n                    <div className=\"pro-details-wishlist\">\n                      <button\n                        className={wishlistItem !== undefined ? \"active\" : \"\"}\n                        disabled={wishlistItem !== undefined}\n                        title={\n                          wishlistItem !== undefined\n                            ? \"Added to wishlist\"\n                            : \"Add to wishlist\"\n                        }\n                        onClick={() => addToWishlist(product, addToast)}\n                      >\n                        <i className=\"pe-7s-like\" />\n                      </button>\n                    </div>\n                    <div className=\"pro-details-compare\">\n                      <button\n                        className={compareItem !== undefined ? \"active\" : \"\"}\n                        disabled={compareItem !== undefined}\n                        title={\n                          compareItem !== undefined\n                            ? \"Added to compare\"\n                            : \"Add to compare\"\n                        }\n                        onClick={() => addToCompare(product, addToast)}\n                      >\n                        <i className=\"pe-7s-shuffle\" />\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </Fragment>\n  );\n}\n\nProductModal.propTypes = {\n  addtoast: PropTypes.func,\n  addtocart: PropTypes.func,\n  addtocompare: PropTypes.func,\n  addtowishlist: PropTypes.func,\n  cartitems: PropTypes.array,\n  compareitem: PropTypes.object,\n  currency: PropTypes.object,\n  discountedprice: PropTypes.number,\n  finaldiscountedprice: PropTypes.number,\n  finalproductprice: PropTypes.number,\n  onHide: PropTypes.func,\n  product: PropTypes.object,\n  show: PropTypes.bool,\n  wishlistitem: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    cartitems: state.cartData,\n  };\n};\n\nexport default connect(mapStateToProps)(ProductModal);\n","import Axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { getDiscountPrice } from \"../../helpers/product\";\nimport ProductModal from \"./ProductModal\";\n\nconst ProductGridSingleTwo = ({\n  product,\n  currency,\n  addToCart,\n  addToWishlist,\n  addToCompare,\n  cartItem,\n  wishlistItem,\n  discountedPrice,\n  compareItem,\n  sliderClassName,\n  spaceBottomClass,\n  colorClass,\n  titlePriceClass,\n}) => {\n  const [modalShow, setModalShow] = useState(false);\n  const { addToast } = useToasts();\n  // const [users, setUsers] = useState([]);\n  // const getUsers = async () => {\n  //   const res = await Axios.get(\"http://13.235.180.192/api/admin/getproduct\")\n  //     .then(data => {\n  //       console.log(data);\n  //       console.log(data.data.data.data);\n  //       setUsers(data.data.data);\n  //     })\n  //     .catch(error => {\n  //       console.log(error);\n  //     });\n  // };\n  // useEffect(() => {\n  //   getUsers();\n  // }, []);\n\n  const [dress, setDress] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch(\"http://13.235.180.192/api/admin/getproduct\");\n\n      const data = await response.json();\n\n      setDress(data.data);\n      console.log(data.data);\n    }\n    getData();\n    return;\n  }, []);\n\n  discountedPrice = getDiscountPrice(product.price, product.discount);\n  const finalProductPrice = +(product.price * currency.currencyRate).toFixed(2);\n  const finalDiscountedPrice = +(\n    discountedPrice * currency.currencyRate\n  ).toFixed(2);\n\n  return (\n    <Fragment>\n      {dress.map(product => (\n        <div\n          className={`col-xl-3 col-md-6 col-lg-4 col-sm-6 ${\n            sliderClassName ? sliderClassName : \"\"\n          }`}\n          key={product._id}\n        >\n          <div\n            className={`product-wrap-2 ${\n              spaceBottomClass ? spaceBottomClass : \"\"\n            } ${colorClass ? colorClass : \"\"} `}\n          >\n            <div className=\"product-img\">\n              <Link\n                to={process.env.PUBLIC_URL + \"/product-sticky/\" + product._id}\n              >\n                <img\n                  className=\"default-img\"\n                  src={product.product_img[0]}\n                  alt=\"\"\n                  style={{ width: \"200px\", height: \"250px\" }}\n                />\n\n                <img\n                  className=\"hover-img\"\n                  src={product.product_img[1]}\n                  alt=\"\"\n                  style={{ width: \"200px\", height: \"250px\" }}\n                />\n              </Link>\n              {/* {product.discount || product.new ? (\n                <div className=\"product-img-badges\">\n                  {product.discount ? (\n                    <span className=\"pink\">-{product.discount}</span>\n                  ) : (\n                    \"\"\n                  )}\n                  {product.new ? <span className=\"purple\">New</span> : \"\"}\n                </div>\n              ) : (\n                \"\"\n              )} */}\n\n              <div className=\"product-action-2\">\n                {product.affiliateLink ? (\n                  <a\n                    href={product.affiliateLink}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                    title=\"Buy now\"\n                  >\n                    {\" \"}\n                    <i className=\"fa fa-shopping-cart\"></i>{\" \"}\n                  </a>\n                ) : product.variation && product.variation.length >= 1 ? (\n                  <Link\n                    to={`${process.env.PUBLIC_URL}/product/${product.id}`}\n                    title=\"Select options\"\n                  >\n                    <i className=\"fa fa-cog\"></i>\n                  </Link>\n                ) : product.stock && product.stock > 0 ? (\n                  <button\n                    onClick={() => addToCart(product, addToast)}\n                    className={\n                      cartItem !== undefined && cartItem.quantity > 0\n                        ? \"active\"\n                        : \"\"\n                    }\n                    disabled={cartItem !== undefined && cartItem.quantity > 0}\n                    title={\n                      cartItem !== undefined ? \"Added to cart\" : \"Add to cart\"\n                    }\n                  >\n                    {\" \"}\n                    <i className=\"fa fa-shopping-cart\"></i>{\" \"}\n                  </button>\n                ) : (\n                  <button disabled className=\"active\" title=\"Out of stock\">\n                    <i className=\"fa fa-shopping-cart\"></i>\n                  </button>\n                )}\n\n                <button onClick={() => setModalShow(true)} title=\"Quick View\">\n                  <i className=\"fa fa-eye\"></i>\n                </button>\n\n                <button\n                  className={compareItem !== undefined ? \"active\" : \"\"}\n                  disabled={compareItem !== undefined}\n                  title={\n                    compareItem !== undefined\n                      ? \"Added to compare\"\n                      : \"Add to compare\"\n                  }\n                  onClick={() => addToCompare(product, addToast)}\n                >\n                  <i className=\"fa fa-retweet\"></i>\n                </button>\n              </div>\n            </div>\n            <div className=\"product-content-2\">\n              <div\n                className={`title-price-wrap-2 ${\n                  titlePriceClass ? titlePriceClass : \"\"\n                }`}\n              >\n                <h3>\n                  <Link to={process.env.PUBLIC_URL + \"/product/\" + product._id}>\n                    {product.product_name}\n                  </Link>\n                </h3>\n                <div className=\"price-2\">\n                  <Fragment>\n                    <span>₹ {product.sell_price}</span>\n                  </Fragment>\n                </div>\n              </div>\n              <div className=\"pro-wishlist-2\">\n                <button\n                  className={wishlistItem !== undefined ? \"active\" : \"\"}\n                  disabled={wishlistItem !== undefined}\n                  title={\n                    wishlistItem !== undefined\n                      ? \"Added to wishlist\"\n                      : \"Add to wishlist\"\n                  }\n                  onClick={() => addToWishlist(product, addToast)}\n                >\n                  <i className=\"fa fa-heart-o\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n      {/* product modal */}\n      <ProductModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        product={product}\n        currency={currency}\n        discountedprice={discountedPrice}\n        finalproductprice={finalProductPrice}\n        finaldiscountedprice={finalDiscountedPrice}\n        cartitem={cartItem}\n        wishlistitem={wishlistItem}\n        compareitem={compareItem}\n        addtocart={addToCart}\n        addtowishlist={addToWishlist}\n        addtocompare={addToCompare}\n        addtoast={addToast}\n      />\n    </Fragment>\n  );\n};\n\nProductGridSingleTwo.propTypes = {\n  addToCart: PropTypes.func,\n  addToCompare: PropTypes.func,\n  addToWishlist: PropTypes.func,\n  cartItem: PropTypes.object,\n  compareItem: PropTypes.object,\n  currency: PropTypes.object,\n  product: PropTypes.object,\n  sliderClassName: PropTypes.string,\n  spaceBottomClass: PropTypes.string,\n  colorClass: PropTypes.string,\n  titlePriceClass: PropTypes.string,\n  wishlistItem: PropTypes.object,\n};\n\nexport default ProductGridSingleTwo;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProducts } from \"../../helpers/product\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport { addToWishlist } from \"../../redux/actions/wishlistActions\";\nimport { addToCompare } from \"../../redux/actions/compareActions\";\nimport ProductGridSingleTwo from \"../../components/product/ProductGridSingleTwo\";\n\nconst ProductGridTwo = ({\n  products,\n  currency,\n  addToCart,\n  addToWishlist,\n  addToCompare,\n  cartItems,\n  wishlistItems,\n  compareItems,\n  sliderClassName,\n  spaceBottomClass,\n  colorClass,\n  titlePriceClass,\n}) => {\n  return (\n    <Fragment>\n      {products.map(product => {\n        return (\n          <ProductGridSingleTwo\n            sliderClassName={sliderClassName}\n            spaceBottomClass={spaceBottomClass}\n            colorClass={colorClass}\n            product={product}\n            currency={currency}\n            addToCart={addToCart}\n            addToWishlist={addToWishlist}\n            addToCompare={addToCompare}\n            // cartItem={\n            //   cartItems.filter(cartItem => cartItem.id === product.id)[0]\n            // }\n            // wishlistItem={\n            //   wishlistItems.filter(\n            //     wishlistItem => wishlistItem.id === product.id\n            //   )[0]\n            // }\n            // compareItem={\n            //   compareItems.filter(\n            //     compareItem => compareItem.id === product.id\n            //   )[0]\n            // }\n            key={product.id}\n            titlePriceClass={titlePriceClass}\n          />\n        );\n      })}\n    </Fragment>\n  );\n};\n\nProductGridTwo.propTypes = {\n  addToCart: PropTypes.func,\n  addToCompare: PropTypes.func,\n  addToWishlist: PropTypes.func,\n  cartItems: PropTypes.array,\n  compareItems: PropTypes.array,\n  currency: PropTypes.object,\n  products: PropTypes.array,\n  sliderClassName: PropTypes.string,\n  spaceBottomClass: PropTypes.string,\n  colorClass: PropTypes.string,\n  titlePriceClass: PropTypes.string,\n  wishlistItems: PropTypes.array,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    products: getProducts(\n      state.productData.products,\n      ownProps.category,\n      ownProps.type,\n      ownProps.limit\n    ),\n    currency: state.currencyData,\n    cartItems: state.cartData,\n    wishlistItems: state.wishlistData,\n    compareItems: state.compareData,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: (\n      item,\n      addToast,\n      quantityCount,\n      selectedProductColor,\n      selectedProductSize\n    ) => {\n      dispatch(\n        addToCart(\n          item,\n          addToast,\n          quantityCount,\n          selectedProductColor,\n          selectedProductSize\n        )\n      );\n    },\n    addToWishlist: (item, addToast) => {\n      dispatch(addToWishlist(item, addToast));\n    },\n    addToCompare: (item, addToast) => {\n      dispatch(addToCompare(item, addToast));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGridTwo);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport ProductGridTwo from \"./ProductGridTwo\";\n\nconst ShopProducts = ({ products, layout }) => {\n  return (\n    <div className=\"shop-bottom-area mt-35\">\n      <div className={`row ${layout ? layout : \"\"}`}>\n        <ProductGridTwo products={products} spaceBottomClass=\"mb-25\" />\n      </div>\n    </div>\n  );\n};\n\nShopProducts.propTypes = {\n  layout: PropTypes.string,\n  products: PropTypes.array,\n};\n\nexport default ShopProducts;\n"],"sourceRoot":""}